#!/usr/bin/env ruby
# Standard Library
require 'digest'
require 'securerandom'
# Gems
require 'help_parser'
require 'user_space'
require 'base_convert'
# This Gem
require 'otpr'

USERSPACE = USER_SPACE::UserSpace.new
if USERSPACE.config? # file exists
  USERSPACE.config.each{|opt, value| OTPR::CONFIG[opt.to_sym] = value}
else
  STDERR.puts "Writting '#{USERSPACE.config_file_name}'"
  USERSPACE.config = OTPR::CONFIG
end

NAME = File.basename($0) # Program Name
HELP = <<HELP
Usage: #{NAME} [options]
Options:
  -v --version
  -h --help
  -i --init      create a new master password
  -s --set       set your own master password
  --pad='#{OTPR::CONFIG[:pad]}'
  --pin=#{OTPR::CONFIG[:pin]}
  --pwd=#{OTPR::CONFIG[:pwd]}
Notes:
  Defaults can be set in #{USERSPACE.config_file_name}
HELP

begin
  OPTIONS = HELP_PARSER::HelpParser.new(OTPR::VERSION, HELP)
  [:pad, :pin, :pwd].each{|k| OPTIONS.defaults!(k, OTPR::CONFIG[k])}
  #PAD = OTPR::Otpr.new
  if OPTIONS[:init]
    # Lets get some entropy.
    entropy = OTPR::Entropy.redundant
    hexadecimal = entropy.map{|r| r.to_s(16)}.join
    qgraph = BaseConvert.new(:hexadecimal, :qgraph).convert(hexadecimal)
    puts qgraph
  else
  end
rescue HELP_PARSER::UsageException
  puts $!.message
  exit 0
rescue HELP_PARSER::UsageError
  STDERR.puts $!.message
  exit 64
end
